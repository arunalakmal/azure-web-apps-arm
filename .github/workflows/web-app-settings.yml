name: Configure Azure Web App Settings

on:
  push:
    branches: [ main, 'feature/*' ]
    # paths: [ 'appsettings.json' ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: 'myappxxx'
  RESOURCE_GROUP: '1-bd26b9ec-playground-sandbox'
  SLOT_NAME: 'v2'  # Replace with your slot name if needed

jobs:
  configure-settings:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # - name: Login to Azure
    #   uses: azure/login@v1
    #   with:
    #     creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: authenticate with Azure
      run: | 
        az login --service-principal \
          --username ${{ secrets.AZURE_CLIENT_ID }} \
          --password ${{ secrets.AZURE_CLIENT_SECRET }} \
          --tenant ${{ secrets.AZURE_TENANT_ID }}

    - name: Configure Azure Web App Settings
      uses: ./.github/actions/configure-settings
      with:
        AZURE_WEBAPP_NAME: ${{ env.AZURE_WEBAPP_NAME }}
        RESOURCE_GROUP: ${{ env.RESOURCE_GROUP }}
        SLOT_NAME: ${{ env.SLOT_NAME }}
        SETTINGS_LOCATION: 'settings/feature'  # Settings File Location wiout a leading slash

    - name: Swap Azure Web App Slots
      needs: [configure-settings]
      uses: ./.github/actions/swap-slot
      with:
        AZURE_WEBAPP_NAME: ${{ env.AZURE_WEBAPP_NAME }}
        RESOURCE_GROUP: ${{ env.RESOURCE_GROUP }}
        SOURCE_SLOT_NAME: ${{ env.SLOT_NAME }}
        TARGET_SLOT_NAME: 'production'  # Replace with your target slot name if needed

    # - name: Parse JSON settings
    #   id: parse-settings
    #   run: |
    #     # Read JSON file and format for Azure CLI
    #     SETTINGS_JSON=$(jq -c '.settings[] | "\(.name)=\(.value)"' settings/appsettings.json | tr '\n' ' ')
    #     echo "settings_json=${SETTINGS_JSON//\"/}" >> $GITHUB_OUTPUT

    # - name: Apply settings to Web App
    #   run: |
    #     az webapp config appsettings set \
    #       --name ${{ env.AZURE_WEBAPP_NAME }} \
    #       --slot ${{ env.SLOT_NAME }} \
    #       --resource-group ${{ env.RESOURCE_GROUP }} \
    #       --settings ${{ steps.parse-settings.outputs.settings_json }}

    # - name: Apply slot-specific settings
    #   run: |
    #     SLOT_SETTINGS=$(jq -r '.settings[] | select(.slotSetting == true) | "\(.name)=\(.value)"' settings/appsettings.json)
          
    #       if [ -z "$SLOT_SETTINGS" ]; then
    #         echo "No slot-specific settings to apply."
    #         exit 0
    #       fi

    #       while IFS= read -r SETTING; do
    #         echo "Applying slot-specific setting: $SETTING"
    #         az webapp config appsettings set \
    #           --name "${{ env.AZURE_WEBAPP_NAME }}" \
    #           --slot "${{ env.SLOT_NAME }}" \
    #           --resource-group "${{ env.RESOURCE_GROUP }}" \
    #           --slot-settings "$SETTING"
    #       done <<< "$SLOT_SETTINGS"

    # - name: Verify settings
    #   run: |
    #     echo "Current settings:"
    #     az webapp config appsettings list \
    #       --name ${{ env.AZURE_WEBAPP_NAME }} \
    #       --resource-group ${{ env.RESOURCE_GROUP }} \
    #       --slot ${{ env.SLOT_NAME }} \
    #       --output table